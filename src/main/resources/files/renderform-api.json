{
  "openapi": "3.0.1",
  "info": {
    "title": "RenderForm API",
    "description": "Swagger documentation for RenderForm API",
    "contact": {
      "name": "API Support",
      "email": "contact@renderform.io"
    },
    "version": "0046546_2024-04-14_08-44-46"
  },
  "externalDocs": {
    "description": "REST API Documentation",
    "url": "https://renderform.io/docs/api/get-started/"
  },
  "servers": [
    {
      "url": "https://api.renderform.io",
      "description": "Base URL"
    }
  ],
  "tags": [
    {
      "name": "Templates API",
      "description": "Endpoint for fetching my templates"
    },
    {
      "name": "Render API",
      "description": "Endpoint for rendering images and PDFs from templates"
    },
    {
      "name": "Screenshots API",
      "description": "Endpoint for creating screenshots"
    },
    {
      "name": "Fonts API",
      "description": "Endpoint for fetching fonts"
    },
    {
      "name": "Render Results API",
      "description": "Endpoint for retrieving render results"
    }
  ],
  "paths": {
    "/api/v2/render": {
      "post": {
        "tags": [
          "Render API"
        ],
        "operationId": "renderV2",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "output",
            "in": "query",
            "description": "Output format",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Output format",
              "example": "image",
              "enum": [
                "image",
                "json"
              ],
              "default": "json"
            },
            "example": "image"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RenderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns JSON response with the URL of the rendered image or the rendered image itself if the output is set to image",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RenderResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/screenshots": {
      "post": {
        "tags": [
          "Screenshots API"
        ],
        "operationId": "createScreenshot",
        "parameters": [
          {
            "name": "x-api-key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateScreenshotRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateScreenshotResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v2/results": {
      "get": {
        "tags": [
          "Render Results API"
        ],
        "operationId": "getRenderResults",
        "parameters": [
          {
            "name": "template",
            "in": "query",
            "description": "Template identifier",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Template identifier"
            }
          },
          {
            "name": "batch",
            "in": "query",
            "description": "Batch identifier for the render request",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Batch identifier for the render request"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "description": "Pagination",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SwaggerPageable"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageRenderResultItem"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v2/results/{identifier}": {
      "get": {
        "tags": [
          "Render Results API"
        ],
        "operationId": "getRenderResult",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RenderResultDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Render Results API"
        ],
        "operationId": "deleteContent",
        "parameters": [
          {
            "name": "identifier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v2/my-templates": {
      "get": {
        "tags": [
          "Templates API"
        ],
        "operationId": "getMyTemplates",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Filter by template name",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Filter by template name"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "description": "Pagination",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SwaggerPageable"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MyTemplateEntryV2"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v2/my-templates/{templateId}": {
      "get": {
        "tags": [
          "Templates API"
        ],
        "operationId": "getMyTemplate",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTemplateBasics"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/api/v1/fonts": {
      "get": {
        "tags": [
          "Fonts API"
        ],
        "description": "Returns all fonts available in the system for the current user.\n\n'source' field can be 'GOOGLE' or 'CUSTOM' (for custom fonts uploaded by the user)\n\n'family' field is the name of the font\n\n'variants' field is a list of all variants available for the font\n\n",
        "operationId": "getAllFonts",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "418": {
            "description": "I'm a teapot",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FontItem"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ApiError": {
        "type": "object",
        "properties": {
          "msg": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RenderRequest": {
        "required": [
          "template"
        ],
        "type": "object",
        "properties": {
          "template": {
            "type": "string",
            "description": "Template ID",
            "example": "template_1234"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Data to be merged into the template",
              "example": {
                "my-text.text": "John"
              }
            },
            "description": "Data to be merged into the template",
            "example": {
              "my-text.text": "John"
            }
          },
          "fileName": {
            "type": "string",
            "description": "Name of the file to be returned",
            "example": "my-file-name"
          },
          "webhookUrl": {
            "type": "string",
            "description": "Webhook URL to be called when the render is done",
            "example": "https://my-webhook.com"
          },
          "version": {
            "type": "string",
            "description": "Cache key to be used for caching the rendered image",
            "example": "my-cache-key"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Additional metadata to be passed to the webhook",
              "example": {
                "my-text.text": "John"
              }
            },
            "description": "Additional metadata to be passed to the webhook",
            "example": {
              "my-text.text": "John"
            }
          },
          "batchName": {
            "type": "string",
            "description": "Batch name to be used for grouping renders",
            "example": "my-batch-name"
          }
        }
      },
      "RenderResponse": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string"
          },
          "href": {
            "type": "string"
          }
        }
      },
      "CreateScreenshotRequest": {
        "required": [
          "height",
          "url",
          "width"
        ],
        "type": "object",
        "properties": {
          "waitTime": {
            "maximum": 5000,
            "minimum": 0,
            "type": "integer",
            "description": "Wait time in milliseconds before capturing the screenshot",
            "format": "int32",
            "example": 1000
          },
          "url": {
            "type": "string",
            "description": "URL to capture",
            "example": "https://renderform.io"
          },
          "width": {
            "maximum": 5000,
            "minimum": 32,
            "type": "integer",
            "description": "Width of the screenshot in pixels",
            "format": "int32",
            "example": 1920
          },
          "height": {
            "maximum": 5000,
            "minimum": 32,
            "type": "integer",
            "description": "Height of the screenshot in pixels",
            "format": "int32",
            "example": 1080
          }
        }
      },
      "CreateScreenshotResponse": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "request": {
            "$ref": "#/components/schemas/CreateScreenshotRequest"
          }
        }
      },
      "SwaggerPageable": {
        "type": "object",
        "properties": {
          "size": {
            "type": "integer",
            "description": "Page size",
            "format": "int32",
            "example": 20
          },
          "page": {
            "type": "integer",
            "description": "Page number",
            "format": "int32",
            "example": 0
          }
        },
        "description": "Pageable parameters"
      },
      "PageRenderResultItem": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RenderResultItem"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "paged": {
            "type": "boolean"
          },
          "unpaged": {
            "type": "boolean"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          }
        }
      },
      "RenderResultItem": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "templateName": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "unsorted": {
            "type": "boolean"
          },
          "sorted": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "RenderResultDetails": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "requestPayload": {
            "type": "string"
          },
          "template": {
            "type": "string"
          },
          "templateName": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "MyTemplateEntryV2": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "preview": {
            "type": "string"
          },
          "scaleFactor": {
            "type": "number",
            "format": "double"
          },
          "outputFormat": {
            "type": "string"
          },
          "outputExtension": {
            "type": "string"
          },
          "quality": {
            "type": "integer",
            "format": "int32"
          },
          "isShared": {
            "type": "boolean"
          },
          "isLivePreviewShared": {
            "type": "boolean"
          },
          "isEmailNotification": {
            "type": "boolean"
          },
          "emailNotification": {
            "type": "string"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "createdBy": {
            "type": "string"
          },
          "editor": {
            "type": "string"
          }
        }
      },
      "ChangePlaceholder": {
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string"
          },
          "componentType": {
            "type": "string",
            "enum": [
              "RECTANGLE",
              "CIRCLE",
              "TEXT",
              "IMAGE",
              "QR_CODE",
              "CHART",
              "SVG_GROUP",
              "RATING",
              "HTML",
              "TEST_OBJECT"
            ]
          },
          "type": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "property": {
            "type": "string"
          },
          "defaultValue": {
            "type": "string"
          }
        }
      },
      "FontItem": {
        "type": "object",
        "properties": {
          "originalName": {
            "type": "string"
          },
          "family": {
            "type": "string"
          },
          "variants": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "defaultVariant": {
            "type": "string"
          },
          "subsets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "category": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "enum": [
              "GOOGLE",
              "CUSTOM"
            ]
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GetTemplateBasics": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "preview": {
            "type": "string"
          },
          "scaleFactor": {
            "type": "number",
            "format": "double"
          },
          "outputFormat": {
            "type": "string"
          },
          "outputExtension": {
            "type": "string"
          },
          "quality": {
            "type": "integer",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "format": "int32"
          },
          "createdBy": {
            "type": "string"
          },
          "editor": {
            "type": "string"
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChangePlaceholder"
            }
          },
          "fonts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FontItem"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "description": "API Key",
        "name": "x-api-key",
        "in": "header"
      }
    }
  }
}